# Local UserParameters
UserParameter=borg.discover[*], dirname $(find $3 -name README) | awk 'BEGIN{printf "{\"data\":["}; {i=split($$1,path,"/"); printf c"{\"{#PATH}\":\""$$1"\", \"{#HOST}\":\"" path[i-1] "\", \"{#DIR}\":\"" path[i] "\"}";c="," };  END{print "]}"}'
UserParameter=borg.start_time[*], date -d "$(grep -i "time (start)" $1/status.txt | sed 's/^.*): //;s/$//')"
UserParameter=borg.start_timestamp[*], date -d "$(grep -i "time (start)" $1/status.txt | sed 's/^.*): //;s/$//')" +%s
UserParameter=borg.end_time[*], date -d "$(grep -i "time (end)" $1/status.txt | sed 's/^.*): //;s/$//')"
UserParameter=borg.end_timestamp[*], date -d "$(grep -i "time (end)" $1/status.txt | sed 's/^.*): //;s/$//')" +%s
UserParameter=borg.all_original[*], grep -i "all archives" $1/status.txt | awk '$$4~/^TB/{printf "%.f", $$3*1000*1000*1000*1000}; $$4~/^GB/{printf "%.f", $$3*1000*1000*1000}; $$4~/^MB/{printf "%u", $$3*1000*1000}; $$4~/^kB/{printf "%u", $$3*1000}; $$4~/^B/{print $$3};'
UserParameter=borg.all_compressed[*], grep -i "all archives" $1/status.txt | awk '$$6~/^TB/{printf "%.f", $$5*1000*1000*1000*1000}; $$6~/^GB/{printf "%.f", $$5*1000*1000*1000}; $$6~/^MB/{printf "%u", $$5*1000*1000}; $$6~/^kB/{printf "%u", $$5*1000}; $$6~/^B/{print $$5};'
UserParameter=borg.all_deduplicated[*], grep -i "all archives" $1/status.txt | awk '$$8~/^TB/{printf "%.f", $$7*1000*1000*1000*1000}; $$8~/^GB/{printf "%.f", $$7*1000*1000*1000}; $$8~/^MB/{printf "%u", $$7*1000*1000}; $$8~/^kB/{printf "%u", $$7*1000}; $$8~/^B/{print $$7};'
UserParameter=borg.this_original[*], grep -i "this archive" $1/status.txt | awk '$$4~/^TB/{printf "%.f", $$3*1000*1000*1000*1000}; $$4~/^GB/{printf "%.f", $$3*1000*1000*1000}; $$4~/^MB/{printf "%u", $$3*1000*1000}; $$4~/^kB/{printf "%u", $$3*1000};$$4~/^B/{print $$3};'
UserParameter=borg.this_compressed[*], grep -i "this archive" $1/status.txt | awk '$$6~/^TB/{printf "%.f", $$5*1000*1000*1000*1000}; $$6~/^GB/{printf "%.f", $$5*1000*1000*1000}; $$6~/^MB/{printf "%u", $$5*1000*1000}; $$6~/^kB/{printf "%u", $$5*1000}; $$6~/^B/{print $$5};'
UserParameter=borg.this_deduplicated[*], grep -i "this archive" $1/status.txt | awk '$$8~/^TB/{printf "%.f", $$7*1000*1000*1000*1000}; $$8~/^GB/{printf "%.f", $$7*1000*1000*1000}; $$8~/^MB/{printf "%u", $$7*1000*1000}; $$8~/^kB/{printf "%u", $$7*1000}; $$8~/^B/{print $$7};'
UserParameter=borg.check[*], case $(grep -ci "no problems found" $1/status.txt) in 2*) echo 0;; *) echo 1;; esac

# Remote UserParameters
UserParameter=borg.discover_remote[*], dirname $(ssh $1@$2 'find $3 -name README') | awk 'BEGIN{printf "{\"data\":["}; {i=split($$1,path,"/"); printf c"{\"{#PATH}\":\""$$1"\", \"{#HOST}\":\"" path[i-1] "\", \"{#DIR}\":\"" path[i] "\"}";c="," };  END{print "]}"}'
UserParameter=borg.start_time_remote[*], date -d "$(ssh $2@$3 cat $1/status.txt | grep -i "time (start)" | sed 's/^.*): //;s/$//')"
UserParameter=borg.start_timestamp_remote[*], date -d "$(ssh $2@$3 cat $1/status.txt | grep -i "time (start)" | sed 's/^.*): //;s/$//')" +%s
UserParameter=borg.end_time_remote[*], date -d "$(ssh $2@$3 cat $1/status.txt | grep -i "time (end)" | sed 's/^.*): //;s/$//')"
UserParameter=borg.end_timestamp_remote[*], date -d "$(ssh $2@$3 cat $1/status.txt | grep -i "time (end)" | sed 's/^.*): //;s/$//')" +%s
UserParameter=borg.all_original_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$4~/^TB/{printf "%.f", $$3*1000*1000*1000*1000}; $$4~/^GB/{printf "%.f", $$3*1000*1000*1000}; $$4~/^MB/{printf "%u", $$3*1000*1000}; $$4~/^kB/{printf "%u", $$3*1000}; $$4~/^B/{print $$3};'
UserParameter=borg.all_compressed_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$6~/^TB/{printf "%.f", $$5*1000*1000*1000*1000}; $$6~/^GB/{printf "%.f", $$5*1000*1000*1000}; $$6~/^MB/{printf "%u", $$5*1000*1000}; $$6~/^kB/{printf "%u", $$5*1000}; $$6~/^B/{print $$5};'
UserParameter=borg.all_deduplicated_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$8~/^TB/{printf "%.f", $$7*1000*1000*1000*1000}; $$8~/^GB/{printf "%.f", $$7*1000*1000*1000}; $$8~/^MB/{printf "%u", $$7*1000*1000}; $$8~/^kB/{printf "%u", $$7*1000}; $$8~/^B/{print $$7};'
UserParameter=borg.this_original_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$4~/^TB/{printf "%.f", $$3*1000*1000*1000*1000}; $$4~/^GB/{printf "%.f", $$3*1000*1000*1000}; $$4~/^MB/{printf "%u", $$3*1000*1000}; $$4~/^kB/{printf "%u", $$3*1000};$$4~/^B/{print $$3};'
UserParameter=borg.this_compressed_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$6~/^TB/{printf "%.f", $$5*1000*1000*1000*1000}; $$6~/^GB/{printf "%.f", $$5*1000*1000*1000}; $$6~/^MB/{printf "%u", $$5*1000*1000}; $$6~/^kB/{printf "%u", $$5*1000}; $$6~/^B/{print $$5};'
UserParameter=borg.this_deduplicated_remote[*], ssh $2@$3 cat $1/status.txt | grep -i "all archives" | awk '$$8~/^TB/{printf "%.f", $$7*1000*1000*1000*1000}; $$8~/^GB/{printf "%.f", $$7*1000*1000*1000}; $$8~/^MB/{printf "%u", $$7*1000*1000}; $$8~/^kB/{printf "%u", $$7*1000}; $$8~/^B/{print $$7};'
UserParameter=borg.check_remote[*], case $(ssh $2@$3 cat $1/status.txt | grep -ci "no problems found") in 2*) echo 0;; *) echo 1;; esac
